[agency]
    ; the agency-id of self-party
    id = ${WEDPR_AGENCY}
    ; the agency info

[mpc]
    dataset_hdfs_path = ${HDFS_HOME}
    job_path = ./mpc-job/
    mpc_root_path_no_gateway =${MPC_SPDZ_HOME}
    read_per_batch_lines = 100000

[crypto]
    sm_crypto = false

[rpc]
    listen_ip=0.0.0.0
    listen_port=${WEDPR_SERVER_LISTEN_PORT}
    token = ${WEDPR_API_TOKEN}
    thread_count=4

[hdfs_storage]
    ; the hdfs configuration
    user = ${HDFS_USER}
    name_node = ${HDFS_NAMENODE_HOST}
    name_node_port = ${HDFS_NAMENODE_PORT}
    token =
    ; enable replace-datanode-on-failure or not
    replace-datanode-on-failure = false
    ; the connection-timeout, in ms, default is 1000ms
    connection-timeout = 2000

[transport]
   ; the endpoint information
   listen_ip = 0.0.0.0
   listen_port = ${WEDPR_TRANSPORT_LISTEN_PORT}
   host_ip = ${WEDPR_TRANSPORT_HOST_IP}
   ; the threadPoolSize
   thread_count = 4
   ; the gatewayService endpoint information
   gateway_target = ${GATEWAY_TARGET}
   ; the components
   components =
   nodeid=${WEDPR_NODE_ID}

[spdz]
  connected_external_ip=${WEDPR_MPC_SPDZ_EXTERNAL_IP}
  connected_port=${WEDPR_MPC_SPDZ_LISTEN_PORT}


[log]
    enable=true
    ; print the log to std::cout or not, default print to the log files
    enable_console_output = false
    log_path=./log
    ; info debug trace
    level=info
    ; MB
    max_log_file_size=200
